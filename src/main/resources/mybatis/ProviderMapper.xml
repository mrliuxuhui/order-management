<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
    "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyingwillow.restaurant.mapper.ProviderMapper">


	<!-- select -->
	<select id="getProviderList" parameterType="HashMap" resultType="Provider">
		SELECT * FROM provider
		<where>
			<if test="null!=id">AND id=#{id}</if>
			<if test="null!=name">AND name=#{name}</if>
			<if test="null!=regionId">AND regionId=#{regionId}</if>
			<if test="null!=cityId">AND cityId=#{cityId}</if>
			<if test="null!=provinceId">AND provinceId=#{provinceId}</if>
			<choose>
				<when test="null!=startTime and null!=endTime">AND updateTime BETWEEN #{startTime} AND #{endTime}</when>
				<when test="null!=startTime">AND updateTime >= #{startTime}</when>
				<when test="null!=endTime">
					<![CDATA[
					AND updateTime <= #{endTime}
					]]>
				</when>
			</choose>
		</where>
		<if test="null!=orders">
			ORDER BY
			<foreach collection="orders" item="sort" separator=",">
				${sort.field} ${sort.dir}
			</foreach>
		</if>
		<if test="null!=start and null!=size">
			LIMIT #{start},#{size}
		</if>
	</select>

	<select id="getProviderCount" parameterType="HashMap" resultType="int">
		SELECT COUNT(*)
		FROM provider
		<where>
			<if test="null!=id">AND id=#{id}</if>
			<if test="null!=name">AND name=#{name}</if>
			<if test="null!=regionId">AND regionId=#{regionId}</if>
			<if test="null!=cityId">AND cityId=#{cityId}</if>
			<if test="null!=provinceId">AND provinceId=#{provinceId}</if>
			<choose>
				<when test="null!=startTime and null!=endTime">AND updateTime BETWEEN #{startTime} AND #{endTime}</when>
				<when test="null!=startTime">AND updateTime >= #{startTime}</when>
				<when test="null!=endTime">
					<![CDATA[
					AND updateTime <= #{endTime}
					]]>
				</when>
			</choose>
		</where>
	</select>

	<select id="getProviderById" parameterType="int" resultType="Provider">
		SELECT *
		FROM provider
		WHERE id = #{providerId}
	</select>


	<!-- insert -->
	<insert id="saveProvider" parameterType="Provider" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO provider(name, address, contactor, tel, regionId, cityId, provinceId, createTime, updateTime, operator)
		VALUES (#{name}, #{address}, #{contactor}, #{tel}, #{regionId}, #{cityId}, #{provinceId}, UNIX_TIMESTAMP()*1000, UNIX_TIMESTAMP()*1000, #{operator})
	</insert>


	<!-- update -->
	<update id="updateProvider" parameterType="Provider">
		UPDATE provider
		<set>
			<if test="null!=name">name = #{name},</if>
			<if test="null!=address">address = #{address},</if>
			<if test="null!=contactor">contactor = #{contactor},</if>
			<if test="null!=tel">tel = #{tel},</if>
			<if test="null!=regionId">regionId = #{regionId},</if>
			<if test="null!=cityId">cityId = #{cityId},</if>
			<if test="null!=provinceId">provinceId = #{provinceId},</if>
			<if test="null!=operator">operator = #{operator},</if>
			<choose>
				<when test="null!=updateTime">updateTime=#{updateTime},</when>
				<otherwise>updateTime = UNIX_TIMESTAMP()*1000</otherwise>
			</choose>
		</set>
		WHERE id = #{id}
	</update>

	<!-- delete -->
	<delete id="deleteProvider" parameterType="int">
		DELETE FROM provider
		WHERE id = #{id}
	</delete>

	<delete id="deleteProviderByIds" parameterType="Map">
		DELETE FROM provider
		WHERE id IN
		<foreach collection="idList" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	
</mapper>
