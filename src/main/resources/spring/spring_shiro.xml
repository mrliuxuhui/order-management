<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <!-- cache -->
    <bean id="redisCacheManager" class="com.flyingwillow.restaurant.shiro.cache.RedisCacheManager">
        <property name="rawRedisService" ref="rawRedisServiceImpl"/>
    </bean>

    <!-- session -->
    <!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <!--cookie的name，我故意取名叫xxxxbaidu -->
        <constructor-arg value="FLYING-WILLOW"/>
        <property name="httpOnly" value="true"/>
        <!--cookie的有效时间 -->
        <property name="maxAge" value="-1"/>
        <!-- 配置存储Session Cookie的domain为 一级域名 -->
        <property name="domain" value=".flyingwillow.com"/>
    </bean>

    <!-- 用户信息记住我功能的相关配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="FLYING-WILLOW"/>
        <property name="httpOnly" value="true"/>
        <!-- 配置存储rememberMe Cookie的domain为 一级域名 -->
        <property name="domain" value=".flyingwillow.com"/>
        <property name="maxAge" value="2592000"/><!-- 30天时间，记住我30天 -->
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） group-->
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('Y29tLmZseWluZ3dpbGxvdy5yZXN0YXVyYW50==')}"/>
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!-- custom shiro session listener -->
    <bean id="customSessionListener" class="com.flyingwillow.restaurant.shiro.session.MySessionListener">
        <property name="redisSessionService" ref="redisSessionServiceImpl"/>
    </bean>
    <bean id="myShiroSessionDao" class="com.flyingwillow.restaurant.shiro.session.MyShiroSessionDao">
        <property name="redisSessionService" ref="redisSessionServiceImpl"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">

        <property name="sessionValidationInterval" value="1800000"/>  <!-- 相隔多久检查一次session的有效性   -->
        <property name="globalSessionTimeout" value="1800000"/> <!-- session 有效时间为半小时 （毫秒单位）-->
        <property name="sessionDAO" ref="myShiroSessionDao"/>
        <property name="sessionListeners">
            <list>
                <ref bean="customSessionListener"/>
            </list>
        </property>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="deleteInvalidSessions" value="true"/>

        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>

    <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
        <property name="interval" value="${session.validate.timespan}"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!-- realm -->

    <bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"><!-- 密钥的算法 -->
        <property name="hashAlgorithmName" value="MD5" />
        <property name="storedCredentialsHexEncoded" value="true" />
        <property name="hashIterations" value="1" />
    </bean>

    <bean id="myRealm" class="com.flyingwillow.restaurant.shiro.realm.MyShiroRealm">
        <property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>
    </bean>

    <!-- security manager -->
    <bean id="securityManager" class="org.apache.shiro.mgt.DefaultSecurityManager">
        <property name="cacheManager" ref="redisCacheManager"/>
        <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
        <property name="realm" ref="myRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- SecurityUtils.setSecurityManager(securityManager) -->

    <!-- shiro filter factory-->


    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!--     <property name="loginUrl" value="${adminPath}/login" />
                <property name="loginUrl" value="/" />
                <property name="successUrl" value="${adminPath}" />
                <property name="successUrl" value="/home/*" />
                <property name="unauthorizedUrl" value="/nopermission.jsp" />
                <property name="filters">
                    <map>
                        <entry key="authc" value-ref="formAuthenticationFilter"/>
                    </map>
                </property> -->
        <property name="filterChainDefinitions">
            <value>
                <!--
                                /static/** = anon
                                /**/#/home = anon
                                /**/uploadPic = anon
                                /**/uploadAvatar = anon
                                /userfiles/** = anon
                                /visitor/** = anon
                                /verification/** = anon
                                /home/** = authc
                                ${adminPath}/login = authc
                                ${adminPath}/logout = logout
                                ${adminPath}/** = user
                -->
            </value>
        </property>
    </bean>

    <!-- life cycle -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>


</beans>